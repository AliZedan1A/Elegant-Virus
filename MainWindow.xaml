<Window x:Class="Elegant_Virus.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Elegant_Virus"
        mc:Ignorable="d"
        Title="MainWindow" Height="633" Width="1200"
        AllowsTransparency="True" WindowStyle="None"
        WindowStartupLocation="CenterScreen" ResizeMode="CanResizeWithGrip" Background="{x:Null}" Foreground="{x:Null}" Activated="Window_Activated">
    <Window.Resources>
        <!--                 btn Exit style            -->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="exit_icon" ImageSource="Icons/exit.png"></ImageBrush>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="btnExitStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource exit_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource exit_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--            btn Max Style       -->
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="max_icon" ImageSource="Icons/max.png"/>

        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="btnMaxStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource max_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource max_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--            btn Min Style      -->
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="min_icon" ImageSource="Icons/min.png"/>

        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="btnMinStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource min_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource min_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--                     btn Webhook Style        -->
        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <SolidColorBrush x:Key="Button.Static.Background3" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border3" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background3" Color="#FF00FF27"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border3" Color="Black"/>
        <SolidColorBrush x:Key="Button.Pressed.Background3" Color="#FF00FF27"/>
        <SolidColorBrush x:Key="Button.Pressed.Border3" Color="Black"/>
        <SolidColorBrush x:Key="Button.Disabled.Background3" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border3" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground3" Color="#FF838383"/>
        <Style x:Key="btnWebhookStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background3}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border3}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Black"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border3}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Black"></Setter>
                                <Setter Property="TextElement.FontSize" TargetName="contentPresenter" Value="16"></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border3}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground3}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Background="Black">
        <Grid.RowDefinitions>
            <RowDefinition Height="36"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!-- Title -->
        <Label Content="Elegant Virus" FontSize="50" Margin="0,3,0,0" Grid.Row="1" 
               HorizontalAlignment="Left" Width="319" Height="79" VerticalAlignment="Top">
            <Label.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0,0">
                    <GradientStop Color="#FF07FF2D" Offset="1"/>
                    <GradientStop Color="Black" Offset="0.993"/>
                </LinearGradientBrush>
            </Label.Foreground>
            <Label.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0,0">
                    <GradientStop  Color="#FF00FF27" Offset="0.909"/>
                    <GradientStop Color="Black" Offset="0.909"/>
                </LinearGradientBrush>
            </Label.Background>
        </Label>
        <!-- win Status Icons -->
        <!-- Buttons -->
        <!-- Exit -->
        <Button Style="{DynamicResource btnExitStyle}" BorderThickness="0" x:Name="btnExit" Width="20" Height="20" HorizontalAlignment="Right" Margin="0,2,6,2" Click="btnExit_Click" >
            <Button.Background>
                <ImageBrush ImageSource="Icons/win.png"/>
            </Button.Background>
        </Button>
        <!-- Max -->
        <Button Style="{DynamicResource btnMaxStyle}" x:Name="btnMax" BorderThickness="0" Width="20" Height="20" HorizontalAlignment="Right" 
                Margin="0,6,31,6" Click="btnMax_Click">
            <Button.Background>
                <ImageBrush ImageSource="Icons/win.png"/>
            </Button.Background>
        </Button>
        <!-- Min -->
        <Button Style="{DynamicResource btnMinStyle}" x:Name="btnMin" BorderThickness="0" Height="20" Width="20" HorizontalAlignment="Right" 
               Margin="0,0,58,0" Click="btnMin_Click">
            <Button.Background>
                <ImageBrush ImageSource="Icons/win.png"/>
            </Button.Background>
        </Button>
        <!-- Web hook -->
        <Label Content="WebHook" Height="50" FontSize="25" Grid.Row="1" Margin="2,95,0,0" Foreground="Lime" HorizontalAlignment="Left"
               Width="123" VerticalAlignment="Top"/>

        <TextBox x:Name="txtWebhook" Grid.Row="1" Margin="130,104,150,0" Height="30" FontSize="20"
                 VerticalAlignment="Top" Background="Lime" BorderThickness="0" />

        <Button Style="{DynamicResource btnWebhookStyle}" x:Name="btnWebhook" Content="Enter" Margin="0,104,31,0" Grid.Row="1"
                FontSize="15" BorderBrush="Lime" Foreground="Lime" Background="Black" Height="32" VerticalAlignment="Top" HorizontalAlignment="Right" Width="95" Click="btnWebhook_Click"/>
        <!-- label Status -->
        <Label Content="status" Margin="0,3,0,0" Grid.Row="1" FontSize="24" Foreground="Lime" Height="53" VerticalAlignment="Top" HorizontalAlignment="Right" Width="208" >
            <Label.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0,0">
                    <GradientStop  Color="Black" Offset="0.707"/>
                    <GradientStop Color="#FF00FF27" Offset="0.714"/>
                </LinearGradientBrush>
            </Label.Background>
        </Label>
        <Label x:Name="lblStatus" Content="ofline" Grid.Row="1" FontSize="24" Foreground="Black" Margin="0,3,0,0"
               HorizontalAlignment="Right" Width="126" Height="53" VerticalAlignment="Top"/>
        <Border BorderThickness="3" BorderBrush="Lime"  Grid.Row="1" x:Name="Panel" Margin="10,145,10,10" >
            <Grid Margin="0,-3,-3,-3">
                <Label Content="Methods" FontSize="24" Foreground="Black" Height="53" VerticalAlignment="Top" HorizontalAlignment="Left" Width="184" Margin="2,4,0,0" >
                    <Label.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0,0">
                            <GradientStop  Color="#FF00FF27" Offset="0.978"/>
                            <GradientStop Color="Black" Offset="0.986"/>
                        </LinearGradientBrush>
                    </Label.Background>
                </Label>
                <Grid x:Name="panel" Height="207" Margin="0,57,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" Width="993">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="175*"/>
                        <ColumnDefinition Width="156*"/>
                    </Grid.ColumnDefinitions>
                    <!--  Send Files  -->
                    <Button Style="{DynamicResource btnWebhookStyle}" x:Name="btnSendFiles" Content="Send Desktop Files"
                    FontSize="15" BorderBrush="Lime" Foreground="Lime" Background="Black" Height="42" VerticalAlignment="Top" 
                        HorizontalAlignment="Left" Width="171" Margin="19,37,0,0" Click="btnSendFiles_Click"/>
                    <!-- Send Token -->
                    <Button Style="{DynamicResource btnWebhookStyle}" x:Name="btnSendToken" Content="Send Token"
                    FontSize="15" BorderBrush="Lime" Foreground="Lime" Background="Black" Height="42" VerticalAlignment="Top" Margin="213,37,141,0" Click="btnSendToken_Click"/>
                    <!--  Send Cookies  -->
                    <Button Style="{DynamicResource btnWebhookStyle}" x:Name="btnCookies" Content="Send Cookies"
                    FontSize="15" BorderBrush="Lime" Foreground="Lime" Background="Black" Height="42" VerticalAlignment="Top" 
                        HorizontalAlignment="Left" Width="172" Margin="406,37,0,0" Grid.ColumnSpan="2" />
                    <!--  Start up  -->
                    <Button Style="{DynamicResource btnWebhookStyle}" x:Name="btnStartup" Content="Start Up"
                FontSize="15" BorderBrush="Lime" Foreground="Lime" Background="Black" Height="42" VerticalAlignment="Top" 
                    HorizontalAlignment="Left" Width="171" Margin="73,37,0,0" Grid.Column="1"/>

                    <!--  Open Process  -->
                    <Button Style="{DynamicResource btnWebhookStyle}" x:Name="btnProcess" Content="Open Process"
                FontSize="15" BorderBrush="Lime" Foreground="Lime" Background="Black" Height="42" VerticalAlignment="Top" 
                    HorizontalAlignment="Left" Width="171" Margin="264,37,0,0" Grid.Column="1"/>
                    <Button Style="{DynamicResource btnWebhookStyle}" x:Name="btnOpenWeb" Content="Open Web URL"
                FontSize="15" BorderBrush="Lime" Foreground="Lime" Background="Black" Height="42" VerticalAlignment="Top" 
                    HorizontalAlignment="Left" Width="171" Margin="264,125,0,0" Grid.Column="1" Click="btnOpenWeb_Click"/>
                    <TextBox x:Name="txt" Margin="84,131,224,0" Height="30" FontSize="20"
                 VerticalAlignment="Top" Background="Lime" BorderThickness="0" Grid.ColumnSpan="2" />
                    <Label Content="URL : " Foreground="Lime" FontSize="19" Margin="19,128,0,0" HorizontalAlignment="Left" Width="53" Height="33" VerticalAlignment="Top"/>
                </Grid>
                <!--  OPEN WEB  -->
                <!--  Open Web txt  -->

                <!--  SHUT DOWN  -->
                <Button Style="{DynamicResource btnWebhookStyle}" x:Name="btnShutDown" Content="Shut Down"
                FontSize="15" BorderBrush="Lime" Foreground="Lime" Background="Black" Height="42" VerticalAlignment="Top" 
                    HorizontalAlignment="Center" Width="170" Margin="0,289,0,0"/>
                <Label x:Name="lableIP" Content="iP : " FontSize="25" Margin="0,0,8,93" Foreground="Lime" Height="50" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="211" RenderTransformOrigin="0.5,0.5">
                    <Label.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="-0.328"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Label.RenderTransform>
                </Label>

                <!--   -->
            </Grid>
        </Border>
        <Button Style="{DynamicResource btnWebhookStyle}" x:Name="btnCon" Content="Connection"
            FontSize="15" BorderBrush="Lime" Foreground="Lime" Background="Black" Height="42" VerticalAlignment="Top" 
            HorizontalAlignment="Left" Width="170" Margin="529,15,0,0" Grid.Row="1" Click="btnCon_Click"/>
        <Label x:Name="lblWait" Content="" Grid.Row="1" FontSize="24" Foreground="#FFEC1D1D" Margin="0,64,456,0"
            HorizontalAlignment="Right" Width="260" Height="42" VerticalAlignment="Top"/>
    </Grid>
</Window>
